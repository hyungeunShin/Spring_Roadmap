required.item.itemName=상품 이름은 필수입니다.
required.default=기본 오류 메시지
range.item.price=가격은 {0} ~ {1} 까지 허용합니다.
max.item.quantity=수량은 최대 {0} 까지 허용합니다.
totalPriceMin=가격 * 수량의 합은 {0}원 이상이어야 합니다. 현재 값은 {1} 원 입니다.

required=필수 값 입니다.
range=범위는 {0} ~ {1} 까지 허용합니다.
max=최대 {0} 까지 허용합니다.

#단순하게 만들면 범용성이 좋아서 여러곳에서 사용할 수 있지만, 메시지를 세밀하게 작성하기 어렵다. 반대로 너무 자세하게 만들면 범용성이 떨어진다.
#가장 좋은 방법은 범용성으로 사용하다가, 세밀하게 작성해야 하는 경우에는 세밀한 내용이 적용되도록 메시지에 단계를 두는 방법이다.

#객체명과 필드명을 조합한 메시지가 있는지 우선 확인하고, 없으면 좀 더 범용적인 메시지를 선택하도록 추가 개발을 해야겠지만, 범용성 있게 잘 개발해두면,
#메시지의 추가 만으로 매우 편리하게 오류 메시지를 관리할 수 있을 것이다.

#객체 오류
#	객체 오류의 경우 다음 순서로 2가지 생성
#	1.: code + "." + object name
#	2.: code
#
#	예) 오류 코드: required, object name: item
#	1.: required.item
#	2.: required

#필드 오류
#	필드 오류의 경우 다음 순서로 4가지 메시지 코드 생성
#	1.: code + "." + object name + "." + field
#	2.: code + "." + field
#	3.: code + "." + field type
#	4.: code
#
#	예) 오류 코드: typeMismatch, object name "user", field "age", field type: int
#	1. "typeMismatch.user.age"
#	2. "typeMismatch.age"
#	3. "typeMismatch.int"
#	4. "typeMismatch"

